#!/bin/sh
# Sample simulator to Dakota system call script
# See Advanced Simulation Code Interfaces chapter in Users Manual

# $1 is params.in FROM Dakota
# $2 is results.out returned to Dakota

# --------------
# PRE-PROCESSING
# --------------
# Incorporate the parameters from DAKOTA into the template, writing ros.in
# Use the following line if SNL's APREPRO utility is used instead of DPrePro.
# ../aprepro -c '*' -q --nowarning ros.template ros.in


dprepro $1 snappyHexMeshDict.template snappyHexMeshDict.in

# --------
# ANALYSIS
# --------

echo " "
echo "************************************"
echo "Running simulation in directory: "
pwd
echo "************************************"
echo " "

cp -r ../casebase/* .
cp snappyHexMeshDict.in system/snappyHexMeshDict

snappyHexMesh -overwrite > bl.log

tail -n 40 bl.log > tail.log
head -n 5 tail.log > final.log

#k=$(head -n 1 head.log | cut -d ":" -f 2)

awk '{print $NF}' final.log > tmp.txt


#if grep "Mesh OK" checkMesh2.log; then
 # printf \\n%s\\n "Mesh OK"
 # res=1
#else
#  printf \\n%s\\n "Mesh non OK"
 # res=2
#fi
#icoFoam > log.icofoam
#probeLocations -latestTime > log.probes
#postProcess -func probesDict -latestTime  > log.probes

#echo " "
#echo "************************************"
#echo "Finished simulation in directory:"
#pwd
#echo "************************************"
#echo " "




# ---------------
# POST-PROCESSING
# ---------------

echo " "
echo "************************************"
echo "Posprocessing data in directory:"
pwd
echo "************************************"
echo " "



#touch results.out
#cp ../casebase/results.out .

#tail -n 1 postProcessing/probesDict/0.5/p | cut -c 15-  > tmp.txt

mv tmp.txt $2
