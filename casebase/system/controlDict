/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  7                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     simpleFoam;

startFrom       latestTime;
//startFrom       startTime;

startTime       0;

stopAt          endTime;
//stopAt          writeNow;

endTime         2000;	//500

deltaT          1;

writeControl    timeStep;
writeInterval   100;

purgeWrite      10;

writeFormat     ascii;	//ascii-binary

writePrecision  8;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;

// ************************************************************************* //

functions
{

///////////////////////////////////////////////////////////////////////////
minmaxdomain
{
    type fieldMinMax;

    functionObjectLibs ("libfieldFunctionObjects.so");

    enabled true;

    mode component;

    writeControl timeStep;
    writeInterval 1;

    log true;

    fields (p U k omega nut);
}
///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////

forces_object
{
	type forces;
	functionObjectLibs ("libforces.so");

        enabled         true;
        log         yes;

	//outputControl outputTime;
	writeControl   timeStep;
	writeInterval  1;

	//// Patches to sample
	//patches ("body head leg slant");
	patches (AhmedGroup);

	//// Name of fields
	pName p;
	Uname U;

	//// Density
	rho rhoInf;
	rhoInf 1.225;

	//// Centre of rotation
	CofR (0 0 0);
}
///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
forcesCoe_object0
{
    type        forceCoeffs;
    functionObjectLibs ("libforces.so");

    patches ("body" "head" "leg" "slant");

    magUInf     40;
    lRef        0.288;
    Aref        0.115;

    rhoInf	1.225;
    rho	        rhoInf;

    liftDir     (0 0 1);
    dragDir     (1 0 0);

    CofR        (0 0 0);
    pitchAxis   (0 1 0);

    log         yes;
}

forcesCoe_object1
{
    type        forceCoeffs;
    functionObjectLibs ("libforces.so");

    patches (AhmedGroup);

    magUInf     40;
    lRef        0.288;
    Aref        0.115;

    rhoInf	1.225;
    rho	        rhoInf;

    liftDir     (0 0 1);
    dragDir     (1 0 0);

    CofR        (0 0 0);
    pitchAxis   (0 1 0);

    log         yes;
}
///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
yplus
{
    type                yPlus;
    functionObjectLibs  ("libutilityFunctionObjects.so");

    enabled true;

    writeControl outputTime;
    //outputControl timeStep;
    //outputInterval 1;

    //log true;
}
///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
residuals
{
    type            residuals;
    libs            ("libutilityFunctionObjects.so");

    writeControl    timeStep;
    writeInterval   1;

    fields (p U k omega nut);
}
///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
/*
robject
{
    type                writeObjects;
    functionObjectLibs  ("libutilityFunctionObjects.so");

    enabled true;

    objects (yPlus);

    exclusiveWriting	true;

    outputControl outputTime;
    //outputControl timeStep;
    //outputInterval 50;

    log true;
}
*/
///////////////////////////////////////////////////////////////////////////

};
